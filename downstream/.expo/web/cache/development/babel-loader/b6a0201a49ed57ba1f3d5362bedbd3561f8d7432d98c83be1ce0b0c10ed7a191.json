{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport ReactNativeText from \"react-native-web/dist/exports/Text\";\nimport { Theme } from \"../../models/theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Text(props) {\n  var size = Theme.fontSizes[props.size || \"md\"];\n  var weight = Theme.fontWeights[props.weight || \"md\"];\n  var color = props.color || Theme.colors.font;\n  return _jsx(ReactNativeText, _objectSpread(_objectSpread({}, props), {}, {\n    style: {\n      color: color,\n      fontSize: size,\n      fontWeight: weight\n    },\n    children: props.children\n  }));\n}","map":{"version":3,"names":["React","ReactNativeText","Theme","jsx","_jsx","Text","props","size","fontSizes","weight","fontWeights","color","colors","font","_objectSpread","style","fontSize","fontWeight","children"],"sources":["/Users/matthewkelley/Desktop/cutchin-cash/downstream/components/Text/Text.tsx"],"sourcesContent":["import React from \"react\";\nimport { Text as ReactNativeText } from \"react-native\";\nimport { Size, Theme } from \"../../models/theme\";\n\nexport type FontColor =\n  | typeof Theme[\"colors\"][\"font\"]\n  | typeof Theme[\"colors\"][\"secondaryFont\"]\n  | typeof Theme[\"colors\"][\"buttonFontSecondary\"];\n\nexport type TextProps = {\n  size?: Size;\n  weight?: Size;\n  color?: FontColor;\n} & React.ComponentProps<typeof ReactNativeText>;\n\nexport default function Text(props: TextProps) {\n  const size = Theme.fontSizes[props.size || \"md\"];\n  const weight = Theme.fontWeights[props.weight || \"md\"];\n  const color = props.color || Theme.colors.font;\n\n  return (\n    <ReactNativeText\n      {...props}\n      style={{\n        color: color,\n        fontSize: size,\n        fontWeight: weight,\n      }}\n    >\n      {props.children}\n    </ReactNativeText>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,eAAA;AAE1B,SAAeC,KAAK;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAajD,eAAe,SAASC,IAAIA,CAACC,KAAgB,EAAE;EAC7C,IAAMC,IAAI,GAAGL,KAAK,CAACM,SAAS,CAACF,KAAK,CAACC,IAAI,IAAI,IAAI,CAAC;EAChD,IAAME,MAAM,GAAGP,KAAK,CAACQ,WAAW,CAACJ,KAAK,CAACG,MAAM,IAAI,IAAI,CAAC;EACtD,IAAME,KAAK,GAAGL,KAAK,CAACK,KAAK,IAAIT,KAAK,CAACU,MAAM,CAACC,IAAI;EAE9C,OACET,IAAA,CAACH,eAAe,EAAAa,aAAA,CAAAA,aAAA,KACVR,KAAK;IACTS,KAAK,EAAE;MACLJ,KAAK,EAAEA,KAAK;MACZK,QAAQ,EAAET,IAAI;MACdU,UAAU,EAAER;IACd,CAAE;IAAAS,QAAA,EAEDZ,KAAK,CAACY;EAAQ,GACC;AAEtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}