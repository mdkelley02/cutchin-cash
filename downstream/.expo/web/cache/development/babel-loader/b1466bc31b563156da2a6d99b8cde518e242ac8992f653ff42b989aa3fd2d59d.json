{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"../../components/Text\";\nimport { Theme } from \"../../models/theme\";\nimport Button from \"../../components/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    rowGap: Theme.spacing[\"sm\"]\n  },\n  input: {\n    height: 40,\n    backgroundColor: Theme.colors.button,\n    color: Theme.colors.font,\n    borderRadius: Theme.spacing[\"sm\"]\n  },\n  form: {\n    flex: 1,\n    rowGap: Theme.spacing[\"md\"]\n  },\n  formField: {\n    flex: 1,\n    rowGap: Theme.spacing[\"sm\"]\n  }\n});\nexport default function Entry() {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isLogin = _React$useState2[0],\n    setIsLogin = _React$useState2[1];\n  return _jsx(View, {\n    style: styles.container,\n    children: isLogin ? _jsx(Login, {}) : _jsx(Register, {})\n  });\n}\nfunction Login() {\n  return _jsxs(View, {\n    style: styles.form,\n    children: [_jsx(Text, {\n      children: \"Login\"\n    }), _jsxs(View, {\n      style: styles.formField,\n      children: [_jsx(Text, {\n        children: \"Email\"\n      }), _jsx(TextInput, {\n        style: styles.input\n      })]\n    }), _jsxs(View, {\n      style: styles.formField,\n      children: [_jsx(Text, {\n        children: \"Password\"\n      }), _jsx(TextInput, {\n        style: styles.input\n      })]\n    }), _jsx(View, {\n      children: _jsx(Button, {\n        color: \"#314468\",\n        children: _jsx(Text, {\n          children: \"Login\"\n        })\n      })\n    })]\n  });\n}\nfunction Register() {\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \"Register\"\n    })\n  });\n}","map":{"version":3,"names":["React","StyleSheet","TextInput","View","Text","Theme","Button","jsx","_jsx","jsxs","_jsxs","styles","create","container","flex","justifyContent","alignItems","rowGap","spacing","input","height","backgroundColor","colors","button","color","font","borderRadius","form","formField","Entry","_React$useState","useState","_React$useState2","_slicedToArray","isLogin","setIsLogin","style","children","Login","Register"],"sources":["/Users/matthewkelley/Desktop/cutchin-cash/downstream/views/Entry/Entry.tsx"],"sourcesContent":["import React from \"react\";\nimport { StyleSheet, TextInput, View } from \"react-native\";\nimport Text from \"../../components/Text\";\nimport { Theme } from \"../../models/theme\";\nimport Button from \"../../components/Button\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    rowGap: Theme.spacing[\"sm\"],\n  },\n  input: {\n    height: 40,\n    backgroundColor: Theme.colors.button,\n    color: Theme.colors.font,\n    borderRadius: Theme.spacing[\"sm\"],\n  },\n  form: {\n    flex: 1,\n    rowGap: Theme.spacing[\"md\"],\n  },\n  formField: {\n    flex: 1,\n    rowGap: Theme.spacing[\"sm\"],\n  },\n});\n\nexport default function Entry() {\n  const [isLogin, setIsLogin] = React.useState(true);\n  return (\n    <View style={styles.container}>{isLogin ? <Login /> : <Register />}</View>\n  );\n}\n\nfunction Login() {\n  return (\n    <View style={styles.form}>\n      <Text>Login</Text>\n      <View style={styles.formField}>\n        <Text>Email</Text>\n        <TextInput style={styles.input} />\n      </View>\n      <View style={styles.formField}>\n        <Text>Password</Text>\n        <TextInput style={styles.input} />\n      </View>\n      <View>\n        <Button color=\"#314468\">\n          <Text>Login</Text>\n        </Button>\n      </View>\n    </View>\n  );\n}\n\nfunction Register() {\n  return (\n    <View>\n      <Text>Register</Text>\n    </View>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAE1B,OAAOC,IAAI;AACX,SAASC,KAAK;AACd,OAAOC,MAAM;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,IAAMC,MAAM,GAAGV,UAAU,CAACW,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAEZ,KAAK,CAACa,OAAO,CAAC,IAAI;EAC5B,CAAC;EACDC,KAAK,EAAE;IACLC,MAAM,EAAE,EAAE;IACVC,eAAe,EAAEhB,KAAK,CAACiB,MAAM,CAACC,MAAM;IACpCC,KAAK,EAAEnB,KAAK,CAACiB,MAAM,CAACG,IAAI;IACxBC,YAAY,EAAErB,KAAK,CAACa,OAAO,CAAC,IAAI;EAClC,CAAC;EACDS,IAAI,EAAE;IACJb,IAAI,EAAE,CAAC;IACPG,MAAM,EAAEZ,KAAK,CAACa,OAAO,CAAC,IAAI;EAC5B,CAAC;EACDU,SAAS,EAAE;IACTd,IAAI,EAAE,CAAC;IACPG,MAAM,EAAEZ,KAAK,CAACa,OAAO,CAAC,IAAI;EAC5B;AACF,CAAC,CAAC;AAEF,eAAe,SAASW,KAAKA,CAAA,EAAG;EAC9B,IAAAC,eAAA,GAA8B9B,KAAK,CAAC+B,QAAQ,CAAC,IAAI,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA3CI,OAAO,GAAAF,gBAAA;IAAEG,UAAU,GAAAH,gBAAA;EAC1B,OACExB,IAAA,CAACL,IAAI;IAACiC,KAAK,EAAEzB,MAAM,CAACE,SAAU;IAAAwB,QAAA,EAAEH,OAAO,GAAG1B,IAAA,CAAC8B,KAAK,KAAG,GAAG9B,IAAA,CAAC+B,QAAQ;EAAG,EAAQ;AAE9E;AAEA,SAASD,KAAKA,CAAA,EAAG;EACf,OACE5B,KAAA,CAACP,IAAI;IAACiC,KAAK,EAAEzB,MAAM,CAACgB,IAAK;IAAAU,QAAA,GACvB7B,IAAA,CAACJ,IAAI;MAAAiC,QAAA,EAAC;IAAK,EAAO,EAClB3B,KAAA,CAACP,IAAI;MAACiC,KAAK,EAAEzB,MAAM,CAACiB,SAAU;MAAAS,QAAA,GAC5B7B,IAAA,CAACJ,IAAI;QAAAiC,QAAA,EAAC;MAAK,EAAO,EAClB7B,IAAA,CAACN,SAAS;QAACkC,KAAK,EAAEzB,MAAM,CAACQ;MAAM,EAAG;IAAA,EAC7B,EACPT,KAAA,CAACP,IAAI;MAACiC,KAAK,EAAEzB,MAAM,CAACiB,SAAU;MAAAS,QAAA,GAC5B7B,IAAA,CAACJ,IAAI;QAAAiC,QAAA,EAAC;MAAQ,EAAO,EACrB7B,IAAA,CAACN,SAAS;QAACkC,KAAK,EAAEzB,MAAM,CAACQ;MAAM,EAAG;IAAA,EAC7B,EACPX,IAAA,CAACL,IAAI;MAAAkC,QAAA,EACH7B,IAAA,CAACF,MAAM;QAACkB,KAAK,EAAC,SAAS;QAAAa,QAAA,EACrB7B,IAAA,CAACJ,IAAI;UAAAiC,QAAA,EAAC;QAAK;MAAO;IACX,EACJ;EAAA,EACF;AAEX;AAEA,SAASE,QAAQA,CAAA,EAAG;EAClB,OACE/B,IAAA,CAACL,IAAI;IAAAkC,QAAA,EACH7B,IAAA,CAACJ,IAAI;MAAAiC,QAAA,EAAC;IAAQ;EAAO,EAChB;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}