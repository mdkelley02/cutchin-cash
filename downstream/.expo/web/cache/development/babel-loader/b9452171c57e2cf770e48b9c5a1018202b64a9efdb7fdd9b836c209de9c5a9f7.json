{"ast":null,"code":"import { makeGenericClientConstructor } from \"@grpc/grpc-js\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Money, Transaction, transactionStatusFromJSON, transactionStatusToJSON } from \"./common\";\nfunction createBaseSendPaymentRequest() {\n  return {\n    receivingUserId: \"\",\n    description: \"\",\n    amount: undefined\n  };\n}\nexport var SendPaymentRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.receivingUserId !== \"\") {\n      writer.uint32(18).string(message.receivingUserId);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(26).string(message.description);\n    }\n    if (message.amount !== undefined) {\n      Money.encode(message.amount, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSendPaymentRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2:\n          if (tag != 18) {\n            break;\n          }\n          message.receivingUserId = reader.string();\n          continue;\n        case 3:\n          if (tag != 26) {\n            break;\n          }\n          message.description = reader.string();\n          continue;\n        case 4:\n          if (tag != 34) {\n            break;\n          }\n          message.amount = Money.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) == 4 || tag == 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      receivingUserId: isSet(object.receivingUserId) ? String(object.receivingUserId) : \"\",\n      description: isSet(object.description) ? String(object.description) : \"\",\n      amount: isSet(object.amount) ? Money.fromJSON(object.amount) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.receivingUserId !== undefined && (obj.receivingUserId = message.receivingUserId);\n    message.description !== undefined && (obj.description = message.description);\n    message.amount !== undefined && (obj.amount = message.amount ? Money.toJSON(message.amount) : undefined);\n    return obj;\n  },\n  create: function create(base) {\n    return SendPaymentRequest.fromPartial(base != null ? base : {});\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$receivingUser, _object$description;\n    var message = createBaseSendPaymentRequest();\n    message.receivingUserId = (_object$receivingUser = object.receivingUserId) != null ? _object$receivingUser : \"\";\n    message.description = (_object$description = object.description) != null ? _object$description : \"\";\n    message.amount = object.amount !== undefined && object.amount !== null ? Money.fromPartial(object.amount) : undefined;\n    return message;\n  }\n};\nfunction createBaseSendPaymentResponse() {\n  return {\n    transaction: undefined\n  };\n}\nexport var SendPaymentResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.transaction !== undefined) {\n      Transaction.encode(message.transaction, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseSendPaymentResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag != 10) {\n            break;\n          }\n          message.transaction = Transaction.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) == 4 || tag == 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      transaction: isSet(object.transaction) ? Transaction.fromJSON(object.transaction) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.transaction !== undefined && (obj.transaction = message.transaction ? Transaction.toJSON(message.transaction) : undefined);\n    return obj;\n  },\n  create: function create(base) {\n    return SendPaymentResponse.fromPartial(base != null ? base : {});\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseSendPaymentResponse();\n    message.transaction = object.transaction !== undefined && object.transaction !== null ? Transaction.fromPartial(object.transaction) : undefined;\n    return message;\n  }\n};\nfunction createBaseDemandPaymentRequest() {\n  return {\n    payingUserId: \"\",\n    description: \"\",\n    amount: undefined\n  };\n}\nexport var DemandPaymentRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.payingUserId !== \"\") {\n      writer.uint32(10).string(message.payingUserId);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    if (message.amount !== undefined) {\n      Money.encode(message.amount, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseDemandPaymentRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag != 10) {\n            break;\n          }\n          message.payingUserId = reader.string();\n          continue;\n        case 2:\n          if (tag != 18) {\n            break;\n          }\n          message.description = reader.string();\n          continue;\n        case 3:\n          if (tag != 26) {\n            break;\n          }\n          message.amount = Money.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) == 4 || tag == 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      payingUserId: isSet(object.payingUserId) ? String(object.payingUserId) : \"\",\n      description: isSet(object.description) ? String(object.description) : \"\",\n      amount: isSet(object.amount) ? Money.fromJSON(object.amount) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.payingUserId !== undefined && (obj.payingUserId = message.payingUserId);\n    message.description !== undefined && (obj.description = message.description);\n    message.amount !== undefined && (obj.amount = message.amount ? Money.toJSON(message.amount) : undefined);\n    return obj;\n  },\n  create: function create(base) {\n    return DemandPaymentRequest.fromPartial(base != null ? base : {});\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$payingUserId, _object$description2;\n    var message = createBaseDemandPaymentRequest();\n    message.payingUserId = (_object$payingUserId = object.payingUserId) != null ? _object$payingUserId : \"\";\n    message.description = (_object$description2 = object.description) != null ? _object$description2 : \"\";\n    message.amount = object.amount !== undefined && object.amount !== null ? Money.fromPartial(object.amount) : undefined;\n    return message;\n  }\n};\nfunction createBaseDemandPaymentResponse() {\n  return {\n    transaction: undefined\n  };\n}\nexport var DemandPaymentResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.transaction !== undefined) {\n      Transaction.encode(message.transaction, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseDemandPaymentResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag != 10) {\n            break;\n          }\n          message.transaction = Transaction.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) == 4 || tag == 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      transaction: isSet(object.transaction) ? Transaction.fromJSON(object.transaction) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.transaction !== undefined && (obj.transaction = message.transaction ? Transaction.toJSON(message.transaction) : undefined);\n    return obj;\n  },\n  create: function create(base) {\n    return DemandPaymentResponse.fromPartial(base != null ? base : {});\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseDemandPaymentResponse();\n    message.transaction = object.transaction !== undefined && object.transaction !== null ? Transaction.fromPartial(object.transaction) : undefined;\n    return message;\n  }\n};\nfunction createBaseDecisionPaymentRequest() {\n  return {\n    transactionId: \"\",\n    status: 0\n  };\n}\nexport var DecisionPaymentRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.transactionId !== \"\") {\n      writer.uint32(10).string(message.transactionId);\n    }\n    if (message.status !== 0) {\n      writer.uint32(16).int32(message.status);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseDecisionPaymentRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag != 10) {\n            break;\n          }\n          message.transactionId = reader.string();\n          continue;\n        case 2:\n          if (tag != 16) {\n            break;\n          }\n          message.status = reader.int32();\n          continue;\n      }\n      if ((tag & 7) == 4 || tag == 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      transactionId: isSet(object.transactionId) ? String(object.transactionId) : \"\",\n      status: isSet(object.status) ? transactionStatusFromJSON(object.status) : 0\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.transactionId !== undefined && (obj.transactionId = message.transactionId);\n    message.status !== undefined && (obj.status = transactionStatusToJSON(message.status));\n    return obj;\n  },\n  create: function create(base) {\n    return DecisionPaymentRequest.fromPartial(base != null ? base : {});\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$transactionId, _object$status;\n    var message = createBaseDecisionPaymentRequest();\n    message.transactionId = (_object$transactionId = object.transactionId) != null ? _object$transactionId : \"\";\n    message.status = (_object$status = object.status) != null ? _object$status : 0;\n    return message;\n  }\n};\nfunction createBaseDecisionPaymentResponse() {\n  return {\n    transaction: undefined\n  };\n}\nexport var DecisionPaymentResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.transaction !== undefined) {\n      Transaction.encode(message.transaction, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseDecisionPaymentResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag != 10) {\n            break;\n          }\n          message.transaction = Transaction.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) == 4 || tag == 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      transaction: isSet(object.transaction) ? Transaction.fromJSON(object.transaction) : undefined\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.transaction !== undefined && (obj.transaction = message.transaction ? Transaction.toJSON(message.transaction) : undefined);\n    return obj;\n  },\n  create: function create(base) {\n    return DecisionPaymentResponse.fromPartial(base != null ? base : {});\n  },\n  fromPartial: function fromPartial(object) {\n    var message = createBaseDecisionPaymentResponse();\n    message.transaction = object.transaction !== undefined && object.transaction !== null ? Transaction.fromPartial(object.transaction) : undefined;\n    return message;\n  }\n};\nfunction createBaseListTransactionsRequest() {\n  return {\n    userId: \"\"\n  };\n}\nexport var ListTransactionsRequest = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseListTransactionsRequest();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag != 10) {\n            break;\n          }\n          message.userId = reader.string();\n          continue;\n      }\n      if ((tag & 7) == 4 || tag == 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      userId: isSet(object.userId) ? String(object.userId) : \"\"\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.userId !== undefined && (obj.userId = message.userId);\n    return obj;\n  },\n  create: function create(base) {\n    return ListTransactionsRequest.fromPartial(base != null ? base : {});\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$userId;\n    var message = createBaseListTransactionsRequest();\n    message.userId = (_object$userId = object.userId) != null ? _object$userId : \"\";\n    return message;\n  }\n};\nfunction createBaseListTransactionsResponse() {\n  return {\n    transactions: []\n  };\n}\nexport var ListTransactionsResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();\n    for (var v of message.transactions) {\n      Transaction.encode(v, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = createBaseListTransactionsResponse();\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag != 10) {\n            break;\n          }\n          message.transactions.push(Transaction.decode(reader, reader.uint32()));\n          continue;\n      }\n      if ((tag & 7) == 4 || tag == 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    return {\n      transactions: Array.isArray(object == null ? void 0 : object.transactions) ? object.transactions.map(function (e) {\n        return Transaction.fromJSON(e);\n      }) : []\n    };\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    if (message.transactions) {\n      obj.transactions = message.transactions.map(function (e) {\n        return e ? Transaction.toJSON(e) : undefined;\n      });\n    } else {\n      obj.transactions = [];\n    }\n    return obj;\n  },\n  create: function create(base) {\n    return ListTransactionsResponse.fromPartial(base != null ? base : {});\n  },\n  fromPartial: function fromPartial(object) {\n    var _object$transactions;\n    var message = createBaseListTransactionsResponse();\n    message.transactions = ((_object$transactions = object.transactions) == null ? void 0 : _object$transactions.map(function (e) {\n      return Transaction.fromPartial(e);\n    })) || [];\n    return message;\n  }\n};\nexport var TransactionServiceService = {\n  sendPayment: {\n    path: \"/cutchin_cash.transaction.TransactionService/SendPayment\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: function requestSerialize(value) {\n      return Buffer.from(SendPaymentRequest.encode(value).finish());\n    },\n    requestDeserialize: function requestDeserialize(value) {\n      return SendPaymentRequest.decode(value);\n    },\n    responseSerialize: function responseSerialize(value) {\n      return Buffer.from(SendPaymentResponse.encode(value).finish());\n    },\n    responseDeserialize: function responseDeserialize(value) {\n      return SendPaymentResponse.decode(value);\n    }\n  },\n  demandPayment: {\n    path: \"/cutchin_cash.transaction.TransactionService/DemandPayment\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: function requestSerialize(value) {\n      return Buffer.from(DemandPaymentRequest.encode(value).finish());\n    },\n    requestDeserialize: function requestDeserialize(value) {\n      return DemandPaymentRequest.decode(value);\n    },\n    responseSerialize: function responseSerialize(value) {\n      return Buffer.from(DemandPaymentResponse.encode(value).finish());\n    },\n    responseDeserialize: function responseDeserialize(value) {\n      return DemandPaymentResponse.decode(value);\n    }\n  },\n  decisionPayment: {\n    path: \"/cutchin_cash.transaction.TransactionService/DecisionPayment\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: function requestSerialize(value) {\n      return Buffer.from(DecisionPaymentRequest.encode(value).finish());\n    },\n    requestDeserialize: function requestDeserialize(value) {\n      return DecisionPaymentRequest.decode(value);\n    },\n    responseSerialize: function responseSerialize(value) {\n      return Buffer.from(DecisionPaymentResponse.encode(value).finish());\n    },\n    responseDeserialize: function responseDeserialize(value) {\n      return DecisionPaymentResponse.decode(value);\n    }\n  },\n  listTransactions: {\n    path: \"/cutchin_cash.transaction.TransactionService/ListTransactions\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: function requestSerialize(value) {\n      return Buffer.from(ListTransactionsRequest.encode(value).finish());\n    },\n    requestDeserialize: function requestDeserialize(value) {\n      return ListTransactionsRequest.decode(value);\n    },\n    responseSerialize: function responseSerialize(value) {\n      return Buffer.from(ListTransactionsResponse.encode(value).finish());\n    },\n    responseDeserialize: function responseDeserialize(value) {\n      return ListTransactionsResponse.decode(value);\n    }\n  }\n};\nexport var TransactionServiceClient = makeGenericClientConstructor(TransactionServiceService, \"cutchin_cash.transaction.TransactionService\");\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":{"version":3,"names":["makeGenericClientConstructor","_m0","Money","Transaction","transactionStatusFromJSON","transactionStatusToJSON","createBaseSendPaymentRequest","receivingUserId","description","amount","undefined","SendPaymentRequest","encode","message","writer","arguments","length","Writer","create","uint32","string","fork","ldelim","decode","input","reader","Reader","end","len","pos","tag","skipType","fromJSON","object","isSet","String","toJSON","obj","base","fromPartial","_object$receivingUser","_object$description","createBaseSendPaymentResponse","transaction","SendPaymentResponse","createBaseDemandPaymentRequest","payingUserId","DemandPaymentRequest","_object$payingUserId","_object$description2","createBaseDemandPaymentResponse","DemandPaymentResponse","createBaseDecisionPaymentRequest","transactionId","status","DecisionPaymentRequest","int32","_object$transactionId","_object$status","createBaseDecisionPaymentResponse","DecisionPaymentResponse","createBaseListTransactionsRequest","userId","ListTransactionsRequest","_object$userId","createBaseListTransactionsResponse","transactions","ListTransactionsResponse","v","push","Array","isArray","map","e","_object$transactions","TransactionServiceService","sendPayment","path","requestStream","responseStream","requestSerialize","value","Buffer","from","finish","requestDeserialize","responseSerialize","responseDeserialize","demandPayment","decisionPayment","listTransactions","TransactionServiceClient"],"sources":["/Users/matthewkelley/Desktop/cutchin-cash/downstream/models/proto/transaction.ts"],"sourcesContent":["/* eslint-disable */\nimport {\n  CallOptions,\n  ChannelCredentials,\n  Client,\n  ClientOptions,\n  ClientUnaryCall,\n  handleUnaryCall,\n  makeGenericClientConstructor,\n  Metadata,\n  ServiceError,\n  UntypedServiceImplementation,\n} from \"@grpc/grpc-js\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Money, Transaction, TransactionStatus, transactionStatusFromJSON, transactionStatusToJSON } from \"./common\";\n\nexport interface SendPaymentRequest {\n  receivingUserId: string;\n  description: string;\n  amount?: Money;\n}\n\nexport interface SendPaymentResponse {\n  transaction?: Transaction;\n}\n\nexport interface DemandPaymentRequest {\n  payingUserId: string;\n  description: string;\n  amount?: Money;\n}\n\nexport interface DemandPaymentResponse {\n  transaction?: Transaction;\n}\n\nexport interface DecisionPaymentRequest {\n  transactionId: string;\n  status: TransactionStatus;\n}\n\nexport interface DecisionPaymentResponse {\n  transaction?: Transaction;\n}\n\nexport interface ListTransactionsRequest {\n  userId: string;\n}\n\nexport interface ListTransactionsResponse {\n  transactions: Transaction[];\n}\n\nfunction createBaseSendPaymentRequest(): SendPaymentRequest {\n  return { receivingUserId: \"\", description: \"\", amount: undefined };\n}\n\nexport const SendPaymentRequest = {\n  encode(message: SendPaymentRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.receivingUserId !== \"\") {\n      writer.uint32(18).string(message.receivingUserId);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(26).string(message.description);\n    }\n    if (message.amount !== undefined) {\n      Money.encode(message.amount, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): SendPaymentRequest {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSendPaymentRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 2:\n          if (tag != 18) {\n            break;\n          }\n\n          message.receivingUserId = reader.string();\n          continue;\n        case 3:\n          if (tag != 26) {\n            break;\n          }\n\n          message.description = reader.string();\n          continue;\n        case 4:\n          if (tag != 34) {\n            break;\n          }\n\n          message.amount = Money.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) == 4 || tag == 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SendPaymentRequest {\n    return {\n      receivingUserId: isSet(object.receivingUserId) ? String(object.receivingUserId) : \"\",\n      description: isSet(object.description) ? String(object.description) : \"\",\n      amount: isSet(object.amount) ? Money.fromJSON(object.amount) : undefined,\n    };\n  },\n\n  toJSON(message: SendPaymentRequest): unknown {\n    const obj: any = {};\n    message.receivingUserId !== undefined && (obj.receivingUserId = message.receivingUserId);\n    message.description !== undefined && (obj.description = message.description);\n    message.amount !== undefined && (obj.amount = message.amount ? Money.toJSON(message.amount) : undefined);\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<SendPaymentRequest>, I>>(base?: I): SendPaymentRequest {\n    return SendPaymentRequest.fromPartial(base ?? {});\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SendPaymentRequest>, I>>(object: I): SendPaymentRequest {\n    const message = createBaseSendPaymentRequest();\n    message.receivingUserId = object.receivingUserId ?? \"\";\n    message.description = object.description ?? \"\";\n    message.amount = (object.amount !== undefined && object.amount !== null)\n      ? Money.fromPartial(object.amount)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseSendPaymentResponse(): SendPaymentResponse {\n  return { transaction: undefined };\n}\n\nexport const SendPaymentResponse = {\n  encode(message: SendPaymentResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.transaction !== undefined) {\n      Transaction.encode(message.transaction, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): SendPaymentResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSendPaymentResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag != 10) {\n            break;\n          }\n\n          message.transaction = Transaction.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) == 4 || tag == 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SendPaymentResponse {\n    return { transaction: isSet(object.transaction) ? Transaction.fromJSON(object.transaction) : undefined };\n  },\n\n  toJSON(message: SendPaymentResponse): unknown {\n    const obj: any = {};\n    message.transaction !== undefined &&\n      (obj.transaction = message.transaction ? Transaction.toJSON(message.transaction) : undefined);\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<SendPaymentResponse>, I>>(base?: I): SendPaymentResponse {\n    return SendPaymentResponse.fromPartial(base ?? {});\n  },\n\n  fromPartial<I extends Exact<DeepPartial<SendPaymentResponse>, I>>(object: I): SendPaymentResponse {\n    const message = createBaseSendPaymentResponse();\n    message.transaction = (object.transaction !== undefined && object.transaction !== null)\n      ? Transaction.fromPartial(object.transaction)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseDemandPaymentRequest(): DemandPaymentRequest {\n  return { payingUserId: \"\", description: \"\", amount: undefined };\n}\n\nexport const DemandPaymentRequest = {\n  encode(message: DemandPaymentRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.payingUserId !== \"\") {\n      writer.uint32(10).string(message.payingUserId);\n    }\n    if (message.description !== \"\") {\n      writer.uint32(18).string(message.description);\n    }\n    if (message.amount !== undefined) {\n      Money.encode(message.amount, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): DemandPaymentRequest {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseDemandPaymentRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag != 10) {\n            break;\n          }\n\n          message.payingUserId = reader.string();\n          continue;\n        case 2:\n          if (tag != 18) {\n            break;\n          }\n\n          message.description = reader.string();\n          continue;\n        case 3:\n          if (tag != 26) {\n            break;\n          }\n\n          message.amount = Money.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) == 4 || tag == 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): DemandPaymentRequest {\n    return {\n      payingUserId: isSet(object.payingUserId) ? String(object.payingUserId) : \"\",\n      description: isSet(object.description) ? String(object.description) : \"\",\n      amount: isSet(object.amount) ? Money.fromJSON(object.amount) : undefined,\n    };\n  },\n\n  toJSON(message: DemandPaymentRequest): unknown {\n    const obj: any = {};\n    message.payingUserId !== undefined && (obj.payingUserId = message.payingUserId);\n    message.description !== undefined && (obj.description = message.description);\n    message.amount !== undefined && (obj.amount = message.amount ? Money.toJSON(message.amount) : undefined);\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<DemandPaymentRequest>, I>>(base?: I): DemandPaymentRequest {\n    return DemandPaymentRequest.fromPartial(base ?? {});\n  },\n\n  fromPartial<I extends Exact<DeepPartial<DemandPaymentRequest>, I>>(object: I): DemandPaymentRequest {\n    const message = createBaseDemandPaymentRequest();\n    message.payingUserId = object.payingUserId ?? \"\";\n    message.description = object.description ?? \"\";\n    message.amount = (object.amount !== undefined && object.amount !== null)\n      ? Money.fromPartial(object.amount)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseDemandPaymentResponse(): DemandPaymentResponse {\n  return { transaction: undefined };\n}\n\nexport const DemandPaymentResponse = {\n  encode(message: DemandPaymentResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.transaction !== undefined) {\n      Transaction.encode(message.transaction, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): DemandPaymentResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseDemandPaymentResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag != 10) {\n            break;\n          }\n\n          message.transaction = Transaction.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) == 4 || tag == 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): DemandPaymentResponse {\n    return { transaction: isSet(object.transaction) ? Transaction.fromJSON(object.transaction) : undefined };\n  },\n\n  toJSON(message: DemandPaymentResponse): unknown {\n    const obj: any = {};\n    message.transaction !== undefined &&\n      (obj.transaction = message.transaction ? Transaction.toJSON(message.transaction) : undefined);\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<DemandPaymentResponse>, I>>(base?: I): DemandPaymentResponse {\n    return DemandPaymentResponse.fromPartial(base ?? {});\n  },\n\n  fromPartial<I extends Exact<DeepPartial<DemandPaymentResponse>, I>>(object: I): DemandPaymentResponse {\n    const message = createBaseDemandPaymentResponse();\n    message.transaction = (object.transaction !== undefined && object.transaction !== null)\n      ? Transaction.fromPartial(object.transaction)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseDecisionPaymentRequest(): DecisionPaymentRequest {\n  return { transactionId: \"\", status: 0 };\n}\n\nexport const DecisionPaymentRequest = {\n  encode(message: DecisionPaymentRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.transactionId !== \"\") {\n      writer.uint32(10).string(message.transactionId);\n    }\n    if (message.status !== 0) {\n      writer.uint32(16).int32(message.status);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): DecisionPaymentRequest {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseDecisionPaymentRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag != 10) {\n            break;\n          }\n\n          message.transactionId = reader.string();\n          continue;\n        case 2:\n          if (tag != 16) {\n            break;\n          }\n\n          message.status = reader.int32() as any;\n          continue;\n      }\n      if ((tag & 7) == 4 || tag == 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): DecisionPaymentRequest {\n    return {\n      transactionId: isSet(object.transactionId) ? String(object.transactionId) : \"\",\n      status: isSet(object.status) ? transactionStatusFromJSON(object.status) : 0,\n    };\n  },\n\n  toJSON(message: DecisionPaymentRequest): unknown {\n    const obj: any = {};\n    message.transactionId !== undefined && (obj.transactionId = message.transactionId);\n    message.status !== undefined && (obj.status = transactionStatusToJSON(message.status));\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<DecisionPaymentRequest>, I>>(base?: I): DecisionPaymentRequest {\n    return DecisionPaymentRequest.fromPartial(base ?? {});\n  },\n\n  fromPartial<I extends Exact<DeepPartial<DecisionPaymentRequest>, I>>(object: I): DecisionPaymentRequest {\n    const message = createBaseDecisionPaymentRequest();\n    message.transactionId = object.transactionId ?? \"\";\n    message.status = object.status ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseDecisionPaymentResponse(): DecisionPaymentResponse {\n  return { transaction: undefined };\n}\n\nexport const DecisionPaymentResponse = {\n  encode(message: DecisionPaymentResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.transaction !== undefined) {\n      Transaction.encode(message.transaction, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): DecisionPaymentResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseDecisionPaymentResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag != 10) {\n            break;\n          }\n\n          message.transaction = Transaction.decode(reader, reader.uint32());\n          continue;\n      }\n      if ((tag & 7) == 4 || tag == 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): DecisionPaymentResponse {\n    return { transaction: isSet(object.transaction) ? Transaction.fromJSON(object.transaction) : undefined };\n  },\n\n  toJSON(message: DecisionPaymentResponse): unknown {\n    const obj: any = {};\n    message.transaction !== undefined &&\n      (obj.transaction = message.transaction ? Transaction.toJSON(message.transaction) : undefined);\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<DecisionPaymentResponse>, I>>(base?: I): DecisionPaymentResponse {\n    return DecisionPaymentResponse.fromPartial(base ?? {});\n  },\n\n  fromPartial<I extends Exact<DeepPartial<DecisionPaymentResponse>, I>>(object: I): DecisionPaymentResponse {\n    const message = createBaseDecisionPaymentResponse();\n    message.transaction = (object.transaction !== undefined && object.transaction !== null)\n      ? Transaction.fromPartial(object.transaction)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseListTransactionsRequest(): ListTransactionsRequest {\n  return { userId: \"\" };\n}\n\nexport const ListTransactionsRequest = {\n  encode(message: ListTransactionsRequest, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ListTransactionsRequest {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseListTransactionsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag != 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n      }\n      if ((tag & 7) == 4 || tag == 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ListTransactionsRequest {\n    return { userId: isSet(object.userId) ? String(object.userId) : \"\" };\n  },\n\n  toJSON(message: ListTransactionsRequest): unknown {\n    const obj: any = {};\n    message.userId !== undefined && (obj.userId = message.userId);\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ListTransactionsRequest>, I>>(base?: I): ListTransactionsRequest {\n    return ListTransactionsRequest.fromPartial(base ?? {});\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ListTransactionsRequest>, I>>(object: I): ListTransactionsRequest {\n    const message = createBaseListTransactionsRequest();\n    message.userId = object.userId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseListTransactionsResponse(): ListTransactionsResponse {\n  return { transactions: [] };\n}\n\nexport const ListTransactionsResponse = {\n  encode(message: ListTransactionsResponse, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.transactions) {\n      Transaction.encode(v!, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ListTransactionsResponse {\n    const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseListTransactionsResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          if (tag != 10) {\n            break;\n          }\n\n          message.transactions.push(Transaction.decode(reader, reader.uint32()));\n          continue;\n      }\n      if ((tag & 7) == 4 || tag == 0) {\n        break;\n      }\n      reader.skipType(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ListTransactionsResponse {\n    return {\n      transactions: Array.isArray(object?.transactions)\n        ? object.transactions.map((e: any) => Transaction.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: ListTransactionsResponse): unknown {\n    const obj: any = {};\n    if (message.transactions) {\n      obj.transactions = message.transactions.map((e) => e ? Transaction.toJSON(e) : undefined);\n    } else {\n      obj.transactions = [];\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ListTransactionsResponse>, I>>(base?: I): ListTransactionsResponse {\n    return ListTransactionsResponse.fromPartial(base ?? {});\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ListTransactionsResponse>, I>>(object: I): ListTransactionsResponse {\n    const message = createBaseListTransactionsResponse();\n    message.transactions = object.transactions?.map((e) => Transaction.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nexport type TransactionServiceService = typeof TransactionServiceService;\nexport const TransactionServiceService = {\n  sendPayment: {\n    path: \"/cutchin_cash.transaction.TransactionService/SendPayment\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: SendPaymentRequest) => Buffer.from(SendPaymentRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => SendPaymentRequest.decode(value),\n    responseSerialize: (value: SendPaymentResponse) => Buffer.from(SendPaymentResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => SendPaymentResponse.decode(value),\n  },\n  demandPayment: {\n    path: \"/cutchin_cash.transaction.TransactionService/DemandPayment\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: DemandPaymentRequest) => Buffer.from(DemandPaymentRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => DemandPaymentRequest.decode(value),\n    responseSerialize: (value: DemandPaymentResponse) => Buffer.from(DemandPaymentResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => DemandPaymentResponse.decode(value),\n  },\n  decisionPayment: {\n    path: \"/cutchin_cash.transaction.TransactionService/DecisionPayment\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: DecisionPaymentRequest) => Buffer.from(DecisionPaymentRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => DecisionPaymentRequest.decode(value),\n    responseSerialize: (value: DecisionPaymentResponse) => Buffer.from(DecisionPaymentResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => DecisionPaymentResponse.decode(value),\n  },\n  listTransactions: {\n    path: \"/cutchin_cash.transaction.TransactionService/ListTransactions\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: ListTransactionsRequest) => Buffer.from(ListTransactionsRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => ListTransactionsRequest.decode(value),\n    responseSerialize: (value: ListTransactionsResponse) =>\n      Buffer.from(ListTransactionsResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => ListTransactionsResponse.decode(value),\n  },\n} as const;\n\nexport interface TransactionServiceServer extends UntypedServiceImplementation {\n  sendPayment: handleUnaryCall<SendPaymentRequest, SendPaymentResponse>;\n  demandPayment: handleUnaryCall<DemandPaymentRequest, DemandPaymentResponse>;\n  decisionPayment: handleUnaryCall<DecisionPaymentRequest, DecisionPaymentResponse>;\n  listTransactions: handleUnaryCall<ListTransactionsRequest, ListTransactionsResponse>;\n}\n\nexport interface TransactionServiceClient extends Client {\n  sendPayment(\n    request: SendPaymentRequest,\n    callback: (error: ServiceError | null, response: SendPaymentResponse) => void,\n  ): ClientUnaryCall;\n  sendPayment(\n    request: SendPaymentRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: SendPaymentResponse) => void,\n  ): ClientUnaryCall;\n  sendPayment(\n    request: SendPaymentRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: SendPaymentResponse) => void,\n  ): ClientUnaryCall;\n  demandPayment(\n    request: DemandPaymentRequest,\n    callback: (error: ServiceError | null, response: DemandPaymentResponse) => void,\n  ): ClientUnaryCall;\n  demandPayment(\n    request: DemandPaymentRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: DemandPaymentResponse) => void,\n  ): ClientUnaryCall;\n  demandPayment(\n    request: DemandPaymentRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: DemandPaymentResponse) => void,\n  ): ClientUnaryCall;\n  decisionPayment(\n    request: DecisionPaymentRequest,\n    callback: (error: ServiceError | null, response: DecisionPaymentResponse) => void,\n  ): ClientUnaryCall;\n  decisionPayment(\n    request: DecisionPaymentRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: DecisionPaymentResponse) => void,\n  ): ClientUnaryCall;\n  decisionPayment(\n    request: DecisionPaymentRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: DecisionPaymentResponse) => void,\n  ): ClientUnaryCall;\n  listTransactions(\n    request: ListTransactionsRequest,\n    callback: (error: ServiceError | null, response: ListTransactionsResponse) => void,\n  ): ClientUnaryCall;\n  listTransactions(\n    request: ListTransactionsRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: ListTransactionsResponse) => void,\n  ): ClientUnaryCall;\n  listTransactions(\n    request: ListTransactionsRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: ListTransactionsResponse) => void,\n  ): ClientUnaryCall;\n}\n\nexport const TransactionServiceClient = makeGenericClientConstructor(\n  TransactionServiceService,\n  \"cutchin_cash.transaction.TransactionService\",\n) as unknown as {\n  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): TransactionServiceClient;\n  service: typeof TransactionServiceService;\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\ntype DeepPartial<T> = T extends Builtin ? T\n  : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\ntype Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}