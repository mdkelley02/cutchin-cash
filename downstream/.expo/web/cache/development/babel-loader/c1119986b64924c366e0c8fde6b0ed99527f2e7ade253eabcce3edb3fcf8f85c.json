{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"../../components/Text\";\nimport { Theme } from \"../../models/theme\";\nimport Button from \"../../components/Button\";\nimport Card from \"../../components/Card\";\nimport { LoginFields, RegisterFields } from \".\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    rowGap: Theme.spacing[\"sm\"]\n  },\n  input: {\n    height: 40,\n    backgroundColor: Theme.colors.buttonSecondary,\n    color: Theme.colors.font,\n    borderRadius: Theme.spacing[\"sm\"],\n    padding: Theme.spacing[\"sm\"],\n    borderWidth: 0\n  },\n  form: {\n    flex: 1,\n    rowGap: Theme.spacing[\"md\"],\n    width: \"40%\"\n  },\n  formField: {\n    flex: 1,\n    rowGap: Theme.spacing[\"sm\"]\n  },\n  formError: {\n    backgroundColor: Theme.colors.error,\n    padding: Theme.spacing[\"sm\"],\n    borderRadius: Theme.spacing[\"sm\"]\n  }\n});\nfunction Swatch() {\n  var swatchStyles = {\n    swatch: {}\n  };\n  return _jsx(View, {\n    style: swatchStyles.swatch\n  });\n}\nexport default function Entry() {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isLogin = _React$useState2[0],\n    setIsLogin = _React$useState2[1];\n  return _jsx(View, {\n    style: styles.container,\n    children: isLogin ? Login({\n      fields: LoginFields,\n      setIsLogin: setIsLogin\n    }) : Register({\n      fields: RegisterFields,\n      setIsLogin: setIsLogin\n    })\n  });\n}\nfunction Login(_ref) {\n  var fields = _ref.fields,\n    setIsLogin = _ref.setIsLogin;\n  return _jsxs(Card, {\n    style: styles.form,\n    children: [_jsx(Text, {\n      size: \"lg\",\n      children: \"Login\"\n    }), fields.map(function (field) {\n      return _jsxs(View, {\n        style: styles.formField,\n        children: [_jsx(Text, {\n          children: field.label\n        }), _jsx(TextInput, {\n          style: styles.input\n        })]\n      });\n    }), _jsx(View, {\n      children: _jsx(Button, {\n        size: \"md\",\n        onPress: function onPress() {\n          return setIsLogin(function (prev) {\n            return !prev;\n          });\n        },\n        children: _jsx(Text, {\n          children: \"Login\"\n        })\n      })\n    })]\n  });\n}\nfunction Register(_ref2) {\n  var fields = _ref2.fields,\n    setIsLogin = _ref2.setIsLogin;\n  return _jsxs(Card, {\n    style: styles.form,\n    children: [_jsx(Text, {\n      size: \"lg\",\n      children: \"Register\"\n    }), fields.map(function (field) {\n      return _jsxs(View, {\n        style: styles.formField,\n        children: [_jsx(Text, {\n          color: Theme.colors.secondaryFont,\n          children: field.label\n        }), _jsx(TextInput, {\n          style: styles.input\n        })]\n      });\n    }), _jsx(View, {\n      children: _jsx(Button, {\n        onPress: function onPress() {\n          return setIsLogin(function (prev) {\n            return !prev;\n          });\n        },\n        children: _jsx(Text, {\n          children: \"Register\"\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","StyleSheet","TextInput","View","Text","Theme","Button","Card","LoginFields","RegisterFields","jsx","_jsx","jsxs","_jsxs","styles","create","container","flex","justifyContent","alignItems","rowGap","spacing","input","height","backgroundColor","colors","buttonSecondary","color","font","borderRadius","padding","borderWidth","form","width","formField","formError","error","Swatch","swatchStyles","swatch","style","Entry","_React$useState","useState","_React$useState2","_slicedToArray","isLogin","setIsLogin","children","Login","fields","Register","_ref","size","map","field","label","onPress","prev","_ref2","secondaryFont"],"sources":["/Users/matthewkelley/Desktop/cutchin-cash/downstream/views/Entry/Entry.tsx"],"sourcesContent":["import React from \"react\";\nimport { StyleSheet, TextInput, View } from \"react-native\";\nimport Text from \"../../components/Text\";\nimport { Theme } from \"../../models/theme\";\nimport Button from \"../../components/Button\";\nimport Card from \"../../components/Card\";\nimport { FormField, LoginFields, RegisterFields } from \".\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    rowGap: Theme.spacing[\"sm\"],\n  },\n  input: {\n    height: 40,\n    backgroundColor: Theme.colors.buttonSecondary,\n    color: Theme.colors.font,\n    borderRadius: Theme.spacing[\"sm\"],\n    padding: Theme.spacing[\"sm\"],\n    borderWidth: 0,\n  },\n  form: {\n    flex: 1,\n    rowGap: Theme.spacing[\"md\"],\n    width: \"40%\",\n  },\n  formField: {\n    flex: 1,\n    rowGap: Theme.spacing[\"sm\"],\n  },\n  formError: {\n    backgroundColor: Theme.colors.error,\n    padding: Theme.spacing[\"sm\"],\n    borderRadius: Theme.spacing[\"sm\"],\n  },\n});\n\nfunction Swatch() {\n  const swatchStyles = {\n    swatch: {},\n  };\n  return <View style={swatchStyles.swatch}></View>;\n}\n\nexport default function Entry() {\n  const [isLogin, setIsLogin] = React.useState(true);\n\n  return (\n    <View style={styles.container}>\n      {isLogin\n        ? Login({ fields: LoginFields, setIsLogin })\n        : Register({ fields: RegisterFields, setIsLogin })}\n    </View>\n  );\n}\n\ntype EntryViewProps = {\n  fields: FormField[];\n  setIsLogin: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nfunction Login({ fields, setIsLogin }: EntryViewProps) {\n  return (\n    <Card style={styles.form}>\n      <Text size=\"lg\">Login</Text>\n      {fields.map((field) => (\n        <View style={styles.formField}>\n          <Text>{field.label}</Text>\n          <TextInput style={styles.input} />\n        </View>\n      ))}\n      <View>\n        <Button size=\"md\" onPress={() => setIsLogin((prev) => !prev)}>\n          <Text>Login</Text>\n        </Button>\n      </View>\n    </Card>\n  );\n}\n\nfunction Register({ fields, setIsLogin }: EntryViewProps) {\n  return (\n    <Card style={styles.form}>\n      <Text size=\"lg\">Register</Text>\n      {fields.map((field) => (\n        <View style={styles.formField}>\n          <Text color={Theme.colors.secondaryFont}>{field.label}</Text>\n          <TextInput style={styles.input} />\n        </View>\n      ))}\n      <View>\n        <Button onPress={() => setIsLogin((prev) => !prev)}>\n          <Text>Register</Text>\n        </Button>\n      </View>\n    </Card>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}