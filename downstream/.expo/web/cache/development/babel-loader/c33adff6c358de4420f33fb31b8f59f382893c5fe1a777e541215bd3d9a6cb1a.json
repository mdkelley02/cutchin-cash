{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"../../components/Text\";\nimport Button from \"../../components/Button\";\nimport Card from \"../../components/Card\";\nimport { styles } from \"./Entry.style\";\nimport { LoginFields, RegisterFields } from \"./Entry.model.\";\nimport { Theme } from \"../../models/theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tabs = {\n  Login: {\n    title: \"Login\",\n    fields: LoginFields\n  },\n  Register: {\n    title: \"Register\",\n    fields: RegisterFields\n  }\n};\nexport default function Entry() {\n  var _useState = useState(Tabs.Login.title),\n    _useState2 = _slicedToArray(_useState, 2),\n    activeTab = _useState2[0],\n    setActiveTab = _useState2[1];\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(Card, {\n      style: styles.form,\n      children: [_jsx(View, {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          columnGap: Theme.spacing.md\n        },\n        children: Object.values(Tabs).map(function (_ref) {\n          var title = _ref.title;\n          return _jsx(Button, {\n            onPress: function onPress() {\n              return setActiveTab(title);\n            },\n            children: _jsx(Text, {\n              style: {\n                color: activeTab === title ? Theme.colors.button : Theme.colors.font,\n                fontWeight: activeTab === title ? \"bold\" : \"normal\"\n              },\n              children: title\n            })\n          });\n        })\n      }), _jsx(View, {})]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","View","Text","Button","Card","styles","LoginFields","RegisterFields","Theme","jsx","_jsx","jsxs","_jsxs","Tabs","Login","title","fields","Register","Entry","_useState","_useState2","_slicedToArray","activeTab","setActiveTab","style","container","children","form","display","flexDirection","columnGap","spacing","md","Object","values","map","_ref","onPress","color","colors","button","font","fontWeight"],"sources":["/Users/matthewkelley/Desktop/cutchin-cash/downstream/views/Entry/Entry.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Text from \"../../components/Text\";\nimport Button from \"../../components/Button\";\nimport Card from \"../../components/Card\";\nimport { styles } from \"./Entry.style\";\nimport { LoginFields, RegisterFields } from \"./Entry.model.\";\nimport { Theme } from \"../../models/theme\";\n\nconst Tabs = {\n  Login: {\n    title: \"Login\",\n    fields: LoginFields,\n  },\n  Register: {\n    title: \"Register\",\n    fields: RegisterFields,\n  },\n} as const;\n\nexport default function Entry() {\n  const [activeTab, setActiveTab] = useState<\n    typeof Tabs[keyof typeof Tabs][\"title\"]\n  >(Tabs.Login.title);\n\n  return (\n    <View style={styles.container}>\n      <Card style={styles.form}>\n        <View\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            columnGap: Theme.spacing.md,\n          }}\n        >\n          {Object.values(Tabs).map(({ title }) => (\n            <Button onPress={() => setActiveTab(title)}>\n              <Text\n                style={{\n                  color:\n                    activeTab === title\n                      ? Theme.colors.button\n                      : Theme.colors.font,\n                  fontWeight: activeTab === title ? \"bold\" : \"normal\",\n                }}\n              >\n                {title}\n              </Text>\n            </Button>\n          ))}\n        </View>\n        <View></View>\n      </Card>\n    </View>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAExC,OAAOC,IAAI;AACX,OAAOC,MAAM;AACb,OAAOC,IAAI;AACX,SAASC,MAAM;AACf,SAASC,WAAW,EAAEC,cAAc;AACpC,SAASC,KAAK;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE3C,IAAMC,IAAI,GAAG;EACXC,KAAK,EAAE;IACLC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAEV;EACV,CAAC;EACDW,QAAQ,EAAE;IACRF,KAAK,EAAE,UAAU;IACjBC,MAAM,EAAET;EACV;AACF,CAAU;AAEV,eAAe,SAASW,KAAKA,CAAA,EAAG;EAC9B,IAAAC,SAAA,GAAkCnB,QAAQ,CAExCa,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAFZG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAI9B,OACEV,IAAA,CAACT,IAAI;IAACuB,KAAK,EAAEnB,MAAM,CAACoB,SAAU;IAAAC,QAAA,EAC5Bd,KAAA,CAACR,IAAI;MAACoB,KAAK,EAAEnB,MAAM,CAACsB,IAAK;MAAAD,QAAA,GACvBhB,IAAA,CAACT,IAAI;QACHuB,KAAK,EAAE;UACLI,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE,KAAK;UACpBC,SAAS,EAAEtB,KAAK,CAACuB,OAAO,CAACC;QAC3B,CAAE;QAAAN,QAAA,EAEDO,MAAM,CAACC,MAAM,CAACrB,IAAI,CAAC,CAACsB,GAAG,CAAC,UAAAC,IAAA;UAAA,IAAGrB,KAAK,GAAAqB,IAAA,CAALrB,KAAK;UAAA,OAC/BL,IAAA,CAACP,MAAM;YAACkC,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMd,YAAY,CAACR,KAAK,CAAC;YAAA,CAAC;YAAAW,QAAA,EACzChB,IAAA,CAACR,IAAI;cACHsB,KAAK,EAAE;gBACLc,KAAK,EACHhB,SAAS,KAAKP,KAAK,GACfP,KAAK,CAAC+B,MAAM,CAACC,MAAM,GACnBhC,KAAK,CAAC+B,MAAM,CAACE,IAAI;gBACvBC,UAAU,EAAEpB,SAAS,KAAKP,KAAK,GAAG,MAAM,GAAG;cAC7C,CAAE;cAAAW,QAAA,EAEDX;YAAK;UACD,EACA;QAAA,CACV;MAAC,EACG,EACPL,IAAA,CAACT,IAAI,KAAQ;IAAA;EACR,EACF;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}