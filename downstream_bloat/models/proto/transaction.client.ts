// @generated by protobuf-ts 2.8.3
// @generated from protobuf file "transaction.proto" (package "cutchin_cash.transaction", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { TransactionService } from "./transaction";
import type { ListTransactionsResponse } from "./transaction";
import type { ListTransactionsRequest } from "./transaction";
import type { DecisionPaymentResponse } from "./transaction";
import type { DecisionPaymentRequest } from "./transaction";
import type { DemandPaymentResponse } from "./transaction";
import type { DemandPaymentRequest } from "./transaction";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { SendPaymentResponse } from "./transaction";
import type { SendPaymentRequest } from "./transaction";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service cutchin_cash.transaction.TransactionService
 */
export interface ITransactionServiceClient {
    /**
     * @generated from protobuf rpc: SendPayment(cutchin_cash.transaction.SendPaymentRequest) returns (cutchin_cash.transaction.SendPaymentResponse);
     */
    sendPayment(input: SendPaymentRequest, options?: RpcOptions): UnaryCall<SendPaymentRequest, SendPaymentResponse>;
    /**
     * @generated from protobuf rpc: DemandPayment(cutchin_cash.transaction.DemandPaymentRequest) returns (cutchin_cash.transaction.DemandPaymentResponse);
     */
    demandPayment(input: DemandPaymentRequest, options?: RpcOptions): UnaryCall<DemandPaymentRequest, DemandPaymentResponse>;
    /**
     * @generated from protobuf rpc: DecisionPayment(cutchin_cash.transaction.DecisionPaymentRequest) returns (cutchin_cash.transaction.DecisionPaymentResponse);
     */
    decisionPayment(input: DecisionPaymentRequest, options?: RpcOptions): UnaryCall<DecisionPaymentRequest, DecisionPaymentResponse>;
    /**
     * @generated from protobuf rpc: ListTransactions(cutchin_cash.transaction.ListTransactionsRequest) returns (cutchin_cash.transaction.ListTransactionsResponse);
     */
    listTransactions(input: ListTransactionsRequest, options?: RpcOptions): UnaryCall<ListTransactionsRequest, ListTransactionsResponse>;
}
/**
 * @generated from protobuf service cutchin_cash.transaction.TransactionService
 */
export class TransactionServiceClient implements ITransactionServiceClient, ServiceInfo {
    typeName = TransactionService.typeName;
    methods = TransactionService.methods;
    options = TransactionService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: SendPayment(cutchin_cash.transaction.SendPaymentRequest) returns (cutchin_cash.transaction.SendPaymentResponse);
     */
    sendPayment(input: SendPaymentRequest, options?: RpcOptions): UnaryCall<SendPaymentRequest, SendPaymentResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<SendPaymentRequest, SendPaymentResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DemandPayment(cutchin_cash.transaction.DemandPaymentRequest) returns (cutchin_cash.transaction.DemandPaymentResponse);
     */
    demandPayment(input: DemandPaymentRequest, options?: RpcOptions): UnaryCall<DemandPaymentRequest, DemandPaymentResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<DemandPaymentRequest, DemandPaymentResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DecisionPayment(cutchin_cash.transaction.DecisionPaymentRequest) returns (cutchin_cash.transaction.DecisionPaymentResponse);
     */
    decisionPayment(input: DecisionPaymentRequest, options?: RpcOptions): UnaryCall<DecisionPaymentRequest, DecisionPaymentResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<DecisionPaymentRequest, DecisionPaymentResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListTransactions(cutchin_cash.transaction.ListTransactionsRequest) returns (cutchin_cash.transaction.ListTransactionsResponse);
     */
    listTransactions(input: ListTransactionsRequest, options?: RpcOptions): UnaryCall<ListTransactionsRequest, ListTransactionsResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListTransactionsRequest, ListTransactionsResponse>("unary", this._transport, method, opt, input);
    }
}
