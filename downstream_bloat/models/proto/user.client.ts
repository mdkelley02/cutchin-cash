// @generated by protobuf-ts 2.8.3
// @generated from protobuf file "user.proto" (package "cutchin_cash.user", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { UserService } from "./user";
import type { GetAllUsersResponse } from "./user";
import type { Empty } from "./common";
import type { GetUserResponse } from "./user";
import type { GetUserRequest } from "./user";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { AddFundsResponse } from "./user";
import type { AddFundsRequest } from "./user";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service cutchin_cash.user.UserService
 */
export interface IUserServiceClient {
    /**
     * @generated from protobuf rpc: AddFunds(cutchin_cash.user.AddFundsRequest) returns (cutchin_cash.user.AddFundsResponse);
     */
    addFunds(input: AddFundsRequest, options?: RpcOptions): UnaryCall<AddFundsRequest, AddFundsResponse>;
    /**
     * @generated from protobuf rpc: GetUser(cutchin_cash.user.GetUserRequest) returns (cutchin_cash.user.GetUserResponse);
     */
    getUser(input: GetUserRequest, options?: RpcOptions): UnaryCall<GetUserRequest, GetUserResponse>;
    /**
     * @generated from protobuf rpc: GetAllUsers(cutchin_cash.common.Empty) returns (cutchin_cash.user.GetAllUsersResponse);
     */
    getAllUsers(input: Empty, options?: RpcOptions): UnaryCall<Empty, GetAllUsersResponse>;
}
/**
 * @generated from protobuf service cutchin_cash.user.UserService
 */
export class UserServiceClient implements IUserServiceClient, ServiceInfo {
    typeName = UserService.typeName;
    methods = UserService.methods;
    options = UserService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: AddFunds(cutchin_cash.user.AddFundsRequest) returns (cutchin_cash.user.AddFundsResponse);
     */
    addFunds(input: AddFundsRequest, options?: RpcOptions): UnaryCall<AddFundsRequest, AddFundsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<AddFundsRequest, AddFundsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetUser(cutchin_cash.user.GetUserRequest) returns (cutchin_cash.user.GetUserResponse);
     */
    getUser(input: GetUserRequest, options?: RpcOptions): UnaryCall<GetUserRequest, GetUserResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetUserRequest, GetUserResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetAllUsers(cutchin_cash.common.Empty) returns (cutchin_cash.user.GetAllUsersResponse);
     */
    getAllUsers(input: Empty, options?: RpcOptions): UnaryCall<Empty, GetAllUsersResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, GetAllUsersResponse>("unary", this._transport, method, opt, input);
    }
}
