{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useState, useContext } from \"react\";\nimport { AuthServiceClient } from \"../models/proto/auth\";\nimport { Empty } from \"../models/proto/common\";\nimport { Metadata } from \"@grpc/grpc-js\";\nimport { UserServiceClient } from \"../models/proto/user\";\nimport { TransactionServiceClient } from \"../models/proto/transaction\";\nimport { GrpcOptions } from \"../models/grpc\";\nimport { Status } from \"@grpc/grpc-js/build/src/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GrpcContext = createContext({\n  login: function login() {\n    return Promise.reject();\n  },\n  register: function register() {\n    return Promise.reject();\n  },\n  refresh: function refresh() {\n    return Promise.reject();\n  },\n  addFunds: function addFunds() {\n    return Promise.reject();\n  },\n  getUser: function getUser() {\n    return Promise.reject();\n  },\n  getAllUsers: function getAllUsers() {\n    return Promise.reject();\n  },\n  sendPayment: function sendPayment() {\n    return Promise.reject();\n  },\n  demandPayment: function demandPayment() {\n    return Promise.reject();\n  },\n  decisionPayment: function decisionPayment() {\n    return Promise.reject();\n  },\n  listTransactions: function listTransactions() {\n    return Promise.reject();\n  },\n  logout: function logout() {},\n  user: null\n});\nexport function useGrpcContext() {\n  return useContext(GrpcContext);\n}\nvar services = {\n  auth: new AuthServiceClient(GrpcOptions.address, GrpcOptions.credentials, GrpcOptions.options),\n  user: new UserServiceClient(GrpcOptions.address, GrpcOptions.credentials, GrpcOptions.options),\n  transaction: new TransactionServiceClient(GrpcOptions.address, GrpcOptions.credentials, GrpcOptions.options)\n};\nexport function GrpcProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  var _useState3 = useState(new Metadata()),\n    _useState4 = _slicedToArray(_useState3, 2),\n    metadata = _useState4[0],\n    setMetadata = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    user = _useState6[0],\n    setUser = _useState6[1];\n  function setAuthInformation(_ref2) {\n    var token = _ref2.token;\n    setToken(token);\n    setMetadata(new Metadata());\n    metadata.set(\"authorization\", \"Bearer \" + token);\n  }\n  function interceptAndPromisify(request, handler) {\n    return new Promise(function (resolve, reject) {\n      handler(request, metadata, function (err, response) {\n        if (err && err.code === Status.UNAUTHENTICATED) {\n          refresh({\n            token: token\n          }).then(function () {\n            interceptAndPromisify(request, handler).then(resolve).catch(reject);\n          });\n        } else if (err) {\n          reject(err);\n        } else {\n          resolve(response);\n        }\n      });\n    });\n  }\n  function login(_x) {\n    return _login.apply(this, arguments);\n  }\n  function _login() {\n    _login = _asyncToGenerator(function* (request) {\n      return interceptAndPromisify(request, services.auth.login).then(function (response) {\n        setAuthInformation(response);\n        return response;\n      });\n    });\n    return _login.apply(this, arguments);\n  }\n  function register(_x2) {\n    return _register.apply(this, arguments);\n  }\n  function _register() {\n    _register = _asyncToGenerator(function* (request) {\n      return interceptAndPromisify(request, services.auth.register).then(function (response) {\n        setAuthInformation(response.token);\n        setUser(response.user);\n        return response;\n      });\n    });\n    return _register.apply(this, arguments);\n  }\n  function refresh(_x3) {\n    return _refresh.apply(this, arguments);\n  }\n  function _refresh() {\n    _refresh = _asyncToGenerator(function* (request) {\n      return interceptAndPromisify(request, services.auth.refresh).then(function (response) {\n        setAuthInformation(response);\n        return response;\n      });\n    });\n    return _refresh.apply(this, arguments);\n  }\n  function addFunds(_x4) {\n    return _addFunds.apply(this, arguments);\n  }\n  function _addFunds() {\n    _addFunds = _asyncToGenerator(function* (request) {\n      return interceptAndPromisify(request, services.user.addFunds);\n    });\n    return _addFunds.apply(this, arguments);\n  }\n  function getUser(_x5) {\n    return _getUser.apply(this, arguments);\n  }\n  function _getUser() {\n    _getUser = _asyncToGenerator(function* (request) {\n      return interceptAndPromisify(request, services.user.getUser).then(function (response) {\n        setUser(response.user);\n        return response;\n      });\n    });\n    return _getUser.apply(this, arguments);\n  }\n  function getAllUsers() {\n    return _getAllUsers.apply(this, arguments);\n  }\n  function _getAllUsers() {\n    _getAllUsers = _asyncToGenerator(function* () {\n      return interceptAndPromisify(Empty.fromJSON({}), services.user.getAllUsers);\n    });\n    return _getAllUsers.apply(this, arguments);\n  }\n  function sendPayment(_x6) {\n    return _sendPayment.apply(this, arguments);\n  }\n  function _sendPayment() {\n    _sendPayment = _asyncToGenerator(function* (request) {\n      return interceptAndPromisify(request, services.transaction.sendPayment);\n    });\n    return _sendPayment.apply(this, arguments);\n  }\n  function demandPayment(_x7) {\n    return _demandPayment.apply(this, arguments);\n  }\n  function _demandPayment() {\n    _demandPayment = _asyncToGenerator(function* (request) {\n      return interceptAndPromisify(request, services.transaction.demandPayment);\n    });\n    return _demandPayment.apply(this, arguments);\n  }\n  function decisionPayment(_x8) {\n    return _decisionPayment.apply(this, arguments);\n  }\n  function _decisionPayment() {\n    _decisionPayment = _asyncToGenerator(function* (request) {\n      return interceptAndPromisify(request, services.transaction.decisionPayment);\n    });\n    return _decisionPayment.apply(this, arguments);\n  }\n  function listTransactions(_x9) {\n    return _listTransactions.apply(this, arguments);\n  }\n  function _listTransactions() {\n    _listTransactions = _asyncToGenerator(function* (request) {\n      return interceptAndPromisify(request, services.transaction.listTransactions);\n    });\n    return _listTransactions.apply(this, arguments);\n  }\n  function logout() {\n    setToken(null);\n    setMetadata(new Metadata());\n    setUser(null);\n  }\n  return _jsx(GrpcContext.Provider, {\n    value: {\n      login: login,\n      register: register,\n      refresh: refresh,\n      addFunds: addFunds,\n      getUser: getUser,\n      getAllUsers: getAllUsers,\n      sendPayment: sendPayment,\n      demandPayment: demandPayment,\n      decisionPayment: decisionPayment,\n      listTransactions: listTransactions,\n      logout: logout,\n      user: user\n    },\n    children: children\n  });\n}","map":{"version":3,"names":["React","createContext","useState","useContext","AuthServiceClient","Empty","Metadata","UserServiceClient","TransactionServiceClient","GrpcOptions","Status","jsx","_jsx","GrpcContext","login","Promise","reject","register","refresh","addFunds","getUser","getAllUsers","sendPayment","demandPayment","decisionPayment","listTransactions","logout","user","useGrpcContext","services","auth","address","credentials","options","transaction","GrpcProvider","_ref","children","_useState","_useState2","_slicedToArray","token","setToken","_useState3","_useState4","metadata","setMetadata","_useState5","_useState6","setUser","setAuthInformation","_ref2","set","interceptAndPromisify","request","handler","resolve","err","response","code","UNAUTHENTICATED","then","catch","_x","_login","apply","arguments","_asyncToGenerator","_x2","_register","_x3","_refresh","_x4","_addFunds","_x5","_getUser","_getAllUsers","fromJSON","_x6","_sendPayment","_x7","_demandPayment","_x8","_decisionPayment","_x9","_listTransactions","Provider","value"],"sources":["/Users/matthewkelley/Desktop/cutchin-cash/downstream/contexts/GrpcContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\nimport {\n  AuthServiceClient,\n  LoginRequest,\n  RegisterRequest,\n  RegisterResponse,\n} from \"../models/proto/auth\";\nimport { Token, User, Empty } from \"../models/proto/common\";\nimport { Metadata, ServiceError } from \"@grpc/grpc-js\";\nimport {\n  AddFundsRequest,\n  AddFundsResponse,\n  GetAllUsersResponse,\n  GetUserRequest,\n  GetUserResponse,\n  UserServiceClient,\n} from \"../models/proto/user\";\nimport {\n  DecisionPaymentRequest,\n  DecisionPaymentResponse,\n  DemandPaymentRequest,\n  DemandPaymentResponse,\n  ListTransactionsRequest,\n  ListTransactionsResponse,\n  SendPaymentRequest,\n  SendPaymentResponse,\n  TransactionServiceClient,\n} from \"../models/proto/transaction\";\nimport { GrpcOptions } from \"../models/grpc\";\nimport { Status } from \"@grpc/grpc-js/build/src/constants\";\n\nexport interface GrpcContextType {\n  login: (request: LoginRequest) => Promise<Token>;\n  register: (request: RegisterRequest) => Promise<RegisterResponse>;\n  refresh: (request: Token) => Promise<Token>;\n  addFunds: (request: AddFundsRequest) => Promise<AddFundsResponse>;\n  getUser: (request: GetUserRequest) => Promise<GetUserResponse>;\n  getAllUsers: () => Promise<GetAllUsersResponse>;\n  sendPayment: (request: SendPaymentRequest) => Promise<SendPaymentResponse>;\n  demandPayment: (\n    request: DemandPaymentRequest\n  ) => Promise<DemandPaymentResponse>;\n  decisionPayment: (\n    request: DecisionPaymentRequest\n  ) => Promise<DecisionPaymentResponse>;\n  listTransactions: (\n    request: ListTransactionsRequest\n  ) => Promise<ListTransactionsResponse>;\n  logout: () => void;\n  user: User | null;\n}\n\nconst GrpcContext = createContext<GrpcContextType>({\n  login: () => Promise.reject(),\n  register: () => Promise.reject(),\n  refresh: () => Promise.reject(),\n  addFunds: () => Promise.reject(),\n  getUser: () => Promise.reject(),\n  getAllUsers: () => Promise.reject(),\n  sendPayment: () => Promise.reject(),\n  demandPayment: () => Promise.reject(),\n  decisionPayment: () => Promise.reject(),\n  listTransactions: () => Promise.reject(),\n  logout: () => {},\n  user: null,\n});\n\nexport function useGrpcContext() {\n  return useContext(GrpcContext);\n}\n\nconst services = {\n  auth: new AuthServiceClient(\n    GrpcOptions.address,\n    GrpcOptions.credentials,\n    GrpcOptions.options\n  ),\n  user: new UserServiceClient(\n    GrpcOptions.address,\n    GrpcOptions.credentials,\n    GrpcOptions.options\n  ),\n  transaction: new TransactionServiceClient(\n    GrpcOptions.address,\n    GrpcOptions.credentials,\n    GrpcOptions.options\n  ),\n} as const;\n\nexport function GrpcProvider({ children }: { children: React.ReactNode }) {\n  const [token, setToken] = useState<string | null>(null);\n  const [metadata, setMetadata] = useState<Metadata>(new Metadata());\n  const [user, setUser] = useState<User | null>(null);\n\n  function setAuthInformation({ token }: Token) {\n    setToken(token);\n    setMetadata(new Metadata());\n    metadata.set(\"authorization\", `Bearer ${token}`);\n  }\n\n  function interceptAndPromisify<ReqT, RespT>(\n    request: ReqT,\n    handler: (\n      request: ReqT,\n      metadata: Metadata,\n      callback: (err: ServiceError, response: RespT) => void\n    ) => void\n  ): Promise<RespT> {\n    return new Promise<RespT>((resolve, reject) => {\n      handler(request, metadata, (err: ServiceError, response: RespT) => {\n        if (err && err.code === Status.UNAUTHENTICATED) {\n          refresh({ token: token! }).then(() => {\n            interceptAndPromisify(request, handler).then(resolve).catch(reject);\n          });\n        } else if (err) {\n          reject(err);\n        } else {\n          resolve(response);\n        }\n      });\n    });\n  }\n\n  // Auth\n  async function login(request: LoginRequest): Promise<Token> {\n    return interceptAndPromisify<LoginRequest, Token>(\n      request,\n      services.auth.login\n    ).then((response) => {\n      setAuthInformation(response);\n      return response;\n    });\n  }\n\n  async function register(request: RegisterRequest): Promise<RegisterResponse> {\n    return interceptAndPromisify<RegisterRequest, RegisterResponse>(\n      request,\n      services.auth.register\n    ).then((response) => {\n      setAuthInformation(response.token);\n      setUser(response.user);\n      return response;\n    });\n  }\n\n  async function refresh(request: Token): Promise<Token> {\n    return interceptAndPromisify<Token, Token>(\n      request,\n      services.auth.refresh\n    ).then((response) => {\n      setAuthInformation(response);\n      return response;\n    });\n  }\n\n  // User\n  async function addFunds(request: AddFundsRequest): Promise<AddFundsResponse> {\n    return interceptAndPromisify<AddFundsRequest, AddFundsResponse>(\n      request,\n      services.user.addFunds\n    );\n  }\n\n  async function getUser(request: GetUserRequest): Promise<GetUserResponse> {\n    return interceptAndPromisify<GetUserRequest, GetUserResponse>(\n      request,\n      services.user.getUser\n    ).then((response) => {\n      setUser(response.user);\n      return response;\n    });\n  }\n\n  async function getAllUsers(): Promise<GetAllUsersResponse> {\n    return interceptAndPromisify<Empty, GetAllUsersResponse>(\n      Empty.fromJSON({}),\n      services.user.getAllUsers\n    );\n  }\n\n  // Transactions\n  async function sendPayment(\n    request: SendPaymentRequest\n  ): Promise<SendPaymentResponse> {\n    return interceptAndPromisify<SendPaymentRequest, SendPaymentResponse>(\n      request,\n      services.transaction.sendPayment\n    );\n  }\n\n  async function demandPayment(\n    request: DemandPaymentRequest\n  ): Promise<DemandPaymentResponse> {\n    return interceptAndPromisify<DemandPaymentRequest, DemandPaymentResponse>(\n      request,\n      services.transaction.demandPayment\n    );\n  }\n\n  async function decisionPayment(\n    request: DecisionPaymentRequest\n  ): Promise<DecisionPaymentResponse> {\n    return interceptAndPromisify<\n      DecisionPaymentRequest,\n      DecisionPaymentResponse\n    >(request, services.transaction.decisionPayment);\n  }\n\n  async function listTransactions(\n    request: ListTransactionsRequest\n  ): Promise<ListTransactionsResponse> {\n    return interceptAndPromisify<\n      ListTransactionsRequest,\n      ListTransactionsResponse\n    >(request, services.transaction.listTransactions);\n  }\n\n  function logout() {\n    setToken(null);\n    setMetadata(new Metadata());\n    setUser(null);\n  }\n\n  return (\n    <GrpcContext.Provider\n      value={{\n        login,\n        register,\n        refresh,\n        addFunds,\n        getUser,\n        getAllUsers,\n        sendPayment,\n        demandPayment,\n        decisionPayment,\n        listTransactions,\n        logout,\n        user,\n      }}\n    >\n      {children}\n    </GrpcContext.Provider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}