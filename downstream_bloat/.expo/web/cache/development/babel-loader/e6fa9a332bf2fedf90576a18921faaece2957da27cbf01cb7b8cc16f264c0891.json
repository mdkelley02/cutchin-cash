{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"../../components/Text\";\nimport Button from \"../../components/Button\";\nimport Card from \"../../components/Card\";\nimport { styles } from \"./Entry.style\";\nimport { LoginFields, RegisterFields } from \"./Entry.model.\";\nimport { Theme } from \"../../models/theme\";\nimport { useUpstream } from \"../../contexts/GrpcContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tabs = {\n  Login: {\n    title: \"Login\",\n    fields: LoginFields\n  },\n  Register: {\n    title: \"Register\",\n    fields: RegisterFields\n  }\n};\nexport default function Entry() {\n  var _useUpstream = useUpstream(),\n    login = _useUpstream.login,\n    register = _useUpstream.register;\n  var _useState = useState(Tabs.Login.title),\n    _useState2 = _slicedToArray(_useState, 2),\n    activeTab = _useState2[0],\n    setActiveTab = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    fields = _useState4[0],\n    setFields = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    formError = _useState6[0],\n    setFormError = _useState6[1];\n  function onSubmit() {\n    var missing = [];\n    Object.entries(Tabs[activeTab].fields).forEach();\n    var fields = Tabs[activeTab].fields;\n    var Email = fields.Email,\n      Password = fields.Password;\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(Card, {\n      style: styles.form,\n      children: [_jsx(View, {\n        style: _objectSpread(_objectSpread({}, styles.tabs), {}, {\n          borderBottomColor: Theme.colors.buttonSecondary,\n          paddingBottom: Theme.spacing.md,\n          borderBottomWidth: 2\n        }),\n        children: Object.values(Tabs).map(function (_ref) {\n          var title = _ref.title;\n          return _jsx(Button, {\n            onPress: function onPress() {\n              setActiveTab(title);\n              setFields({});\n            },\n            color: activeTab === title ? Theme.colors.button : Theme.colors.buttonSecondary,\n            style: {\n              flex: 1,\n              borderRadius: 0\n            },\n            children: _jsx(Text, {\n              children: title\n            })\n          });\n        })\n      }), _jsx(View, {\n        style: styles.formFieldContainer,\n        children: Object.entries(Tabs[activeTab].fields).map(function (_ref2) {\n          var _ref3 = _slicedToArray(_ref2, 2),\n            key = _ref3[0],\n            _ref3$ = _ref3[1],\n            label = _ref3$.label,\n            type = _ref3$.type;\n          return _jsxs(View, {\n            style: styles.formField,\n            children: [_jsx(Text, {\n              children: label\n            }), _jsx(TextInput, {\n              onChange: function onChange(event) {\n                setFields(_objectSpread(_objectSpread({}, fields), {}, _defineProperty({}, key, event.nativeEvent.text)));\n              },\n              secureTextEntry: type === \"password\",\n              style: styles.input\n            })]\n          }, key);\n        })\n      }), _jsx(View, {\n        style: {\n          borderTopColor: Theme.colors.buttonSecondary,\n          paddingTop: Theme.spacing.md,\n          borderTopWidth: 2\n        },\n        children: _jsx(Button, {\n          onPress: function onPress() {},\n          children: _jsx(Text, {\n            children: \"Submit\"\n          })\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","TextInput","View","Text","Button","Card","styles","LoginFields","RegisterFields","Theme","useUpstream","jsx","_jsx","jsxs","_jsxs","Tabs","Login","title","fields","Register","Entry","_useUpstream","login","register","_useState","_useState2","_slicedToArray","activeTab","setActiveTab","_useState3","_useState4","setFields","_useState5","_useState6","formError","setFormError","onSubmit","missing","Object","entries","forEach","Email","Password","style","container","children","form","_objectSpread","tabs","borderBottomColor","colors","buttonSecondary","paddingBottom","spacing","md","borderBottomWidth","values","map","_ref","onPress","color","button","flex","borderRadius","formFieldContainer","_ref2","_ref3","key","_ref3$","label","type","formField","onChange","event","_defineProperty","nativeEvent","text","secureTextEntry","input","borderTopColor","paddingTop","borderTopWidth"],"sources":["/Users/matthewkelley/Desktop/cutchin-cash/downstream/views/Entry/Entry.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { TextInput, View } from \"react-native\";\nimport Text from \"../../components/Text\";\nimport Button from \"../../components/Button\";\nimport Card from \"../../components/Card\";\nimport { styles } from \"./Entry.style\";\nimport { LoginFields, RegisterFields } from \"./Entry.model.\";\nimport { Theme } from \"../../models/theme\";\nimport { useUpstream } from \"../../contexts/GrpcContext\";\n\ntype Tab = keyof typeof Tabs;\n\nconst Tabs = {\n  Login: {\n    title: \"Login\",\n    fields: LoginFields,\n  },\n  Register: {\n    title: \"Register\",\n    fields: RegisterFields,\n  },\n} as const;\n\nexport default function Entry() {\n  const { login, register } = useUpstream();\n  const [activeTab, setActiveTab] = useState<Tab>(Tabs.Login.title);\n  const [fields, setFields] = useState<Record<string, string>>({});\n  const [formError, setFormError] = useState<string | null>(null);\n\n  function onSubmit() {\n    const missing = [];\n    Object.entries(Tabs[activeTab].fields).forEach();\n    const fields = Tabs[activeTab].fields;\n    const { Email, Password } = fields;\n  }\n\n  return (\n    <View style={styles.container}>\n      <Card style={styles.form}>\n        {/* Tabs */}\n        <View\n          style={{\n            ...styles.tabs,\n            borderBottomColor: Theme.colors.buttonSecondary,\n            paddingBottom: Theme.spacing.md,\n            borderBottomWidth: 2,\n          }}\n        >\n          {Object.values(Tabs).map(({ title }) => (\n            <Button\n              onPress={() => {\n                setActiveTab(title);\n                setFields({});\n              }}\n              color={\n                activeTab === title\n                  ? Theme.colors.button\n                  : Theme.colors.buttonSecondary\n              }\n              style={{\n                flex: 1,\n                borderRadius: 0,\n              }}\n            >\n              <Text>{title}</Text>\n            </Button>\n          ))}\n        </View>\n\n        {/* Fields */}\n        <View style={styles.formFieldContainer}>\n          {Object.entries(Tabs[activeTab].fields).map(\n            ([key, { label, type }]) => (\n              <View key={key} style={styles.formField}>\n                <Text>{label}</Text>\n                <TextInput\n                  onChange={(event) => {\n                    setFields({\n                      ...fields,\n                      [key]: event.nativeEvent.text,\n                    });\n                  }}\n                  secureTextEntry={type === \"password\"}\n                  style={styles.input}\n                />\n              </View>\n            )\n          )}\n        </View>\n\n        {/* Submit */}\n        <View\n          style={{\n            borderTopColor: Theme.colors.buttonSecondary,\n            paddingTop: Theme.spacing.md,\n            borderTopWidth: 2,\n          }}\n        >\n          <Button onPress={() => {}}>\n            <Text>Submit</Text>\n          </Button>\n        </View>\n      </Card>\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}