{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"../../components/Text\";\nimport { Theme } from \"../../models/theme\";\nimport Button from \"../../components/Button\";\nimport Card from \"../../components/Card\";\nimport { LoginFields, RegisterFields } from \".\";\nimport { styles } from \"./Entry.style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Entry() {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isLogin = _React$useState2[0],\n    setIsLogin = _React$useState2[1];\n  var fields = isLogin ? LoginFields : RegisterFields;\n  return _jsx(View, {\n    style: styles.container,\n    children: fields.map(function (field) {\n      return _jsxs(View, {\n        style: styles.formField,\n        children: [_jsx(Text, {\n          children: field.label\n        }), _jsx(TextInput, {\n          style: styles.input\n        })]\n      });\n    })\n  });\n}\nfunction Login(_ref) {\n  var fields = _ref.fields,\n    setIsLogin = _ref.setIsLogin;\n  return _jsxs(Card, {\n    style: styles.form,\n    children: [_jsx(Text, {\n      size: \"lg\",\n      children: \"Login\"\n    }), fields.map(function (field) {\n      return _jsxs(View, {\n        style: styles.formField,\n        children: [_jsx(Text, {\n          children: field.label\n        }), _jsx(TextInput, {\n          style: styles.input\n        })]\n      });\n    }), _jsx(View, {\n      children: _jsx(Button, {\n        size: \"md\",\n        onPress: function onPress() {\n          return setIsLogin(function (prev) {\n            return !prev;\n          });\n        },\n        children: _jsx(Text, {\n          children: \"Login\"\n        })\n      })\n    })]\n  });\n}\nfunction Register(_ref2) {\n  var fields = _ref2.fields,\n    setIsLogin = _ref2.setIsLogin;\n  return _jsxs(Card, {\n    style: styles.form,\n    children: [_jsx(Text, {\n      size: \"lg\",\n      children: \"Register\"\n    }), fields.map(function (field) {\n      return _jsxs(View, {\n        style: styles.formField,\n        children: [_jsx(Text, {\n          color: Theme.colors.secondaryFont,\n          children: field.label\n        }), _jsx(TextInput, {\n          style: styles.input\n        })]\n      });\n    }), _jsx(View, {\n      children: _jsx(Button, {\n        onPress: function onPress() {\n          return setIsLogin(function (prev) {\n            return !prev;\n          });\n        },\n        children: _jsx(Text, {\n          children: \"Register\"\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","TextInput","View","Text","Theme","Button","Card","LoginFields","RegisterFields","styles","jsx","_jsx","jsxs","_jsxs","Entry","_React$useState","useState","_React$useState2","_slicedToArray","isLogin","setIsLogin","fields","style","container","children","map","field","formField","label","input","Login","_ref","form","size","onPress","prev","Register","_ref2","color","colors","secondaryFont"],"sources":["/Users/matthewkelley/Desktop/cutchin-cash/downstream/views/Entry/Entry.tsx"],"sourcesContent":["import React from \"react\";\nimport { StyleSheet, TextInput, View } from \"react-native\";\nimport Text from \"../../components/Text\";\nimport { Theme } from \"../../models/theme\";\nimport Button from \"../../components/Button\";\nimport Card from \"../../components/Card\";\nimport { FormField, LoginFields, RegisterFields } from \".\";\nimport { styles } from \"./Entry.style\";\n\nexport default function Entry() {\n  const [isLogin, setIsLogin] = React.useState(true);\n  const fields = isLogin ? LoginFields : RegisterFields;\n\n  return (\n    <View style={styles.container}>\n      {fields.map((field) => (\n        <View style={styles.formField}>\n          <Text>{field.label}</Text>\n          <TextInput style={styles.input} />\n        </View>\n      ))}\n    </View>\n  );\n}\n\ntype EntryViewProps = {\n  fields: FormField[];\n  setIsLogin: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nfunction Login({ fields, setIsLogin }: EntryViewProps) {\n  return (\n    <Card style={styles.form}>\n      <Text size=\"lg\">Login</Text>\n      {fields.map((field) => (\n        <View style={styles.formField}>\n          <Text>{field.label}</Text>\n          <TextInput style={styles.input} />\n        </View>\n      ))}\n      <View>\n        <Button size=\"md\" onPress={() => setIsLogin((prev) => !prev)}>\n          <Text>Login</Text>\n        </Button>\n      </View>\n    </Card>\n  );\n}\n\nfunction Register({ fields, setIsLogin }: EntryViewProps) {\n  return (\n    <Card style={styles.form}>\n      <Text size=\"lg\">Register</Text>\n      {fields.map((field) => (\n        <View style={styles.formField}>\n          <Text color={Theme.colors.secondaryFont}>{field.label}</Text>\n          <TextInput style={styles.input} />\n        </View>\n      ))}\n      <View>\n        <Button onPress={() => setIsLogin((prev) => !prev)}>\n          <Text>Register</Text>\n        </Button>\n      </View>\n    </Card>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}